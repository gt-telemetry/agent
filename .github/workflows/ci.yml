name: Build GT7 Telemetry Agent

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest nuitka
      - name: Run tests
        run: |
          pytest tests

  set-version:
    name: Set Build Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setver.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set semantic version
        id: setver
        run: |
          echo "VERSION=0.1.0+build${{ github.run_number }}" > version.txt
          echo "version=0.1.0+build${{ github.run_number }}" >> $GITHUB_OUTPUT

  build-linux:
    name: Build Linux Release
    runs-on: ubuntu-latest
    needs: [test, set-version]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Nuitka
        run: pip install nuitka
      - name: Build Linux Executable
        run: |
          python -m nuitka --onefile gt7_telemetry_agent.py
          mkdir -p releases
          VERSION=$(cat version.txt)
          mv gt7_telemetry_agent_Linux_x64.bin releases/gt7_telemetry_agent-linux-$VERSION.bin
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gt7_telemetry_agent-linux
          path: releases/gt7_telemetry_agent-linux-${{ needs.set-version.outputs.version }}.bin

  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    needs: [test, set-version]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Nuitka
        run: pip install nuitka
      - name: Build Windows Executable
        run: |
          python -m nuitka --standalone --windows-company-name="GT Telemetry" --windows-product-name="GT7TelemetryAgent" --windows-product-version="0.1.0" --assume-yes-for-downloads --remove-output gt7_telemetry_agent.py
          $VERSION = Get-Content version.txt
          powershell Compress-Archive -Path gt7_telemetry_agent.dist/* -DestinationPath releases/gt7_telemetry_agent-windows-$VERSION.zip
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gt7_telemetry_agent-windows
          path: releases/gt7_telemetry_agent-windows-${{ needs.set-version.outputs.version }}.zip

  build-macos:
    name: Build macOS Release
    runs-on: macos-latest
    needs: [test, set-version]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Nuitka
        run: pip install nuitka
      - name: Build macOS Executable
        run: |
          python -m nuitka --onefile gt7_telemetry_agent.py
          mkdir -p releases
          VERSION=$(cat version.txt)
          mv gt7_telemetry_agent_macOS.bin releases/gt7_telemetry_agent-macos-$VERSION.bin
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gt7_telemetry_agent-macos
          path: releases/gt7_telemetry_agent-macos-${{ needs.set-version.outputs.version }}.bin
